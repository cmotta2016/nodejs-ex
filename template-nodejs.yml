apiVersion: v1
kind: Template
labels:
  template: nodejs-dev-build
metadata:
  name: nodejs-dev-build
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the application image
    name: nodejs-backend-dev
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels: 
      app: nodejs-ex
    name: nodejs-backend-dev
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: 'nodejs-backend-dev:latest'
    postCommit:
      script: npm test -- --coverage
    runPolicy: Serial
    source:
      git:
        uri: 'https://github.com/cmotta2016/nodejs-ex'
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: 'nodejs:10'
          namespace: openshift
      type: Source
    triggers:
      - imageChange:
        type: ImageChange
      - type: ConfigChange
      - github:
          secret: secret101
        type: GitHub
      - generic:
          secret: secret101
        type: Generic
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: nodejs-backend-dev
    name: nodejs-backend-dev
  spec:
    replicas: 1
    selector:
      app: nodejs-backend-dev
      deploymentconfig: nodejs-backend-dev
    template:
      metadata:
        labels:
          app: nodejs-backend-dev
          deploymentconfig: nodejs-backend-dev
      spec:
        containers:
          - image: >-
              docker-registry.default.svc:5000/nodejs-backend/nodejs-backend-dev:latest
            imagePullPolicy: Always
            name: nodejs-backend-dev
            ports:
              - containerPort: 8080
                protocol: TCP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: nodejs-backend-dev
    name: nodejs-backend-dev
  spec:
    ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      app: nodejs-backend-dev
      deploymentconfig: nodejs-backend-dev
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: nodejs-backend-dev
    name: nodejs-backend-dev
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: nodejs-backend-dev

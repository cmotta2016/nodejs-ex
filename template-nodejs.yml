apiVersion: v1
kind: Template
labels:
  template: nodejs-dev-build
metadata:
  name: nodejs-dev-build
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: "${LABEL}"
    annotations:
      description: Keeps track of changes in the application image
    name: "${NAME}"
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels: 
      app: "${LABEL}"
    name: "${NAME}"
  spec:
    source:
      type: Git
      git:
        uri: 'https://github.com/cmotta2016/nodejs-ex'
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: 'nodejs:10'
          namespace: openshift
    output:
      to:
        kind: ImageStreamTag
        name: "${NAME}:latest"
    triggers:
    - type: ImageChange
    - type: ConfigChange
    - type: GitHub
      github:
        secret: secret101
    - type: Generic
      generic:
        secret: secret101
    postCommit:
      script: npm test -- --coverage
    runPolicy: Serial
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: "${LABEL}"
    name: "${NAME}"
  spec:
    ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 3000
    selector:
      app: "${NAME}"
      deploymentconfig: "${NAME}"
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: "${LABEL}"
    name: "${NAME}"
  spec:
    port:
      targetPort: web
    to:
      kind: Service
      name: "${NAME}"
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: "${LABEL}"
    name: "${NAME}"
  spec:
    strategy:
      type: "Rolling"
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "${NAME}"
        from: 
          kind: ImageStreamTag
          name: "${NAME}:latest"
    - type: ConfigChange
    replicas: 1
    selector:
      app: "${NAME}"
      deploymentconfig: "${NAME}"
    template:
      metadata:
        labels:
          app: "${LABEL}"
          deploymentconfig: "${NAME}"
      spec:
        containers:
        - image: " "
          name: "${NAME}"
          ports:
            - containerPort: 3000
              protocol: TCP
parameters:
- name: NAME
  displayName: Name
  description: The name assigned to all of the frontend objects defined in this template.
  required: true
- name: LABEL
  displayName: App label
  required: true
  value: nodejs-example
